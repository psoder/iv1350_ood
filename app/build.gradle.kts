/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.6.20"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    // Use the Kotlin test library.
    // testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    // testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.6.20")

    testImplementation("io.mockk:mockk:1.12.3")
    
    testImplementation(platform("org.junit:junit-bom:5.8.2"))

    testImplementation("org.junit.jupiter:junit-jupiter")

}

application {
    // Define the main class for the application.
    mainClass.set("main.MainKt")
}

// java {
//     sourceCompatibility = JavaVersion.VERSION_16
//     targetCompatibility = JavaVersion.VERSION_16
// }

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    kotlinOptions { jvmTarget = "11" }
}

tasks.test {
    useJUnitPlatform()
    testLogging { events("skipped", "failed") }
}


tasks.named<JavaExec>("run") { standardInput = System.`in` }